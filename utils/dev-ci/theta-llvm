#!/bin/bash

## BOILERPLATE
source $(dirname $0)/_ci-common

## ENVIRONMENT

### DEV_CI_PRGENV: one of cray, intel, gnu, llvm(/version)
DEV_CI_PRGENV=${DEV_CI_PRGENV:-llvm}
for x in intel gnu cray llvm; do module swap PrgEnv-$x PrgEnv-${DEV_CI_PRGENV} ; done 2>/dev/null

### DEV_CI_COMPILER: if non-empty, compiler/version to swap
[[ -n ${DEV_CI_COMPILER} ]] && module swap ${DEV_CI_COMPILER%/*} ${DEV_CI_COMPILER}

module load xalt
export TMPDIR=${XDG_RUNTIME_DIR:-/tmp}

export NETWORKS="${CI_NETWORKS:-aries}"
export GMAKE="${CI_MAKE:-${GMAKE:-make}}"
MAKE_CMD="$GMAKE ${CI_MAKE_PARALLEL:--j8}"

## CONFIGURE
if [[ $STAGES =~ ,configure, ]]; then
  $UPCXX/configure ${GASNET:+ --with-gasnet=$GASNET}
fi
module unload xalt

## BUILD
if [[ $STAGES =~ ,build, ]]; then
  eval $DO_BUILD
fi

## TEST
if [[ $STAGES =~ ,tests, ]]; then
  eval $DO_COMPILE || touch .pipe-fail
  if [[ -n $MAYBE_DEV  ]]; then
    # must split dev-check due to run time limit
    for codemode in opt debug; do
      rm -rf tests/$codemode
      mkdir -p tests/$codemode
      mv test-*-$codemode-[^-]* tests/$codemode/
    done
  fi
fi

## RUN
if [[ $STAGES =~ ,run, ]]; then
  function do_run {
    for (( i = 15; i; --i )); do  # Retry every 2 minutes for up to 30 minutes total
      (( i % 2 )) && QUEUE=debug-cache-quad || QUEUE=debug-flat-quad
      time env -u TMPDIR qsub -q $QUEUE -t 60 -n 2 -A CSC250STPM17 -I \
        <<<"set -x ; cd $PWD && time $GMAKE ${MAYBE_DEV}run-tests NETWORKS='$NETWORKS' || touch .pipe-fail" |& tee batch.log
      if [[ ${PIPESTATUS[0]} -eq 0 ]]; then break; fi
      if ! grep -q "jobs per user.*has been reached" batch.log; then failure; fi
      sleep 120
    done
    [[ $i -eq 0 ]] && touch .pipe-fail
    (set +x; rm -f test-*-*)
  }
  if [[ -n $MAYBE_DEV  ]]; then
    # must split dev-check due to run time limit
    for codemode in opt debug; do
      rm -rf test-*-*
      ln -s tests/$codemode/* .
      do_run
    done
  else
    do_run
  fi
fi

## DONE
finished
