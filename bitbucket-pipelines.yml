# This is a simple build configuration for C++ + Make.
# Check our guides at https://confluence.atlassian.com/x/5Q4SMw for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.


definitions:
  options:
    max-time: 60
  variables: &variables
    - name: _LEAVE_BLANK_FOR_DEFAULTS_
    - name: CI_DEV_CHECK
    - name: CI_NETWORKS
    - name: CI_RANKS
    - name: CI_TESTS
    - name: CI_NO_TESTS
    - name: CI_EXTRAFLAGS
  steps:
    - step: &build-test
          name: Build and Test
          artifacts: 
            - Makefile
            - config.log
            - bld/gasnet.*/config.*
            - test-results/**
          script:
            - utils/pipeline.sh
          after-script:
            - echo "Status/Results " ; 
              echo "Repo       "$BITBUCKET_REPO_FULL_NAME ; 
              echo "Branch     "$BITBUCKET_BRANCH ; 
              echo "Tag        "$BITBUCKET_TAG ; 
              echo "Commit     "$BITBUCKET_COMMIT ; 
              echo "PR         "$BITBUCKET_PR_ID ; 
              echo " " ; 
              echo "Exit code  "$BITBUCKET_EXIT_CODE

    - step: &gcc-latest
          <<: *build-test
          name: Build and Test gcc:latest
          image: gcc:latest

    - step: &gcc-pedantic
          <<: *build-test
          name: Build and Test gcc:latest/pedantic
          image: gcc:latest
          script:
            - CXXFLAGS='-Wextra -pedantic' utils/pipeline.sh

    - step: &gcc-floor
          <<: *build-test
          name: Build and Test gcc:floor
          image: gcc:6.4.0

    - step: &clang-latest
          <<: *build-test
          name: Build and Test clang:latest on ubuntu:latest
          image: bonachea/clang-latest-ubu
          script:
            - CI_CONFIGURE_ARGS='CC=clang CXX=clang++ --with-python=python3' utils/pipeline.sh

    - step: &clang-floor
          <<: *build-test
          name: Build and Test clang:floor on ubuntu:18.04
          image: bonachea/clang-floor-ubu18
          script:
            - CI_CONFIGURE_ARGS='CC=clang CXX=clang++' utils/pipeline.sh

pipelines:

  default:
    - parallel:
      - step: *clang-latest
      - step: *gcc-latest
    #  - step: *clang-floor
    #  - step: *gcc-floor

  custom: # on-demand configs

    gcc-latest:
      - variables: *variables
      - step: *gcc-latest

    gcc-floor:
      - variables: *variables
      - step: *gcc-floor

    gcc-pedantic:
      - variables: *variables
      - step: *gcc-pedantic

    clang-latest:
      - variables: *variables
      - step: *clang-latest

    clang-floor:
      - variables: *variables
      - step: *clang-floor


